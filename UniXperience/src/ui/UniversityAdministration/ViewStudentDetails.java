/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui.UniversityAdministration;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author RIYA
 */
public class ViewStudentDetails extends javax.swing.JPanel {

    /**
     * Creates new form ViewAdmissionsOffice
     */
    public ViewStudentDetails() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ScrollPane = new javax.swing.JScrollPane();
        StudentCatalog = new javax.swing.JTable();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnButton = new javax.swing.JButton();

        StudentCatalog.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "First Name", "Last Name", "Email ID", "Contact No"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        ScrollPane.setViewportView(StudentCatalog);

        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnButton.setText("<<Back");
        btnButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(66, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnUpdate)
                        .addGap(47, 47, 47)
                        .addComponent(btnDelete))
                    .addComponent(ScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 728, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnButton))
                .addGap(63, 63, 63))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addComponent(btnButton)
                .addGap(18, 18, 18)
                .addComponent(ScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 283, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnUpdate)
                    .addComponent(btnDelete))
                .addContainerGap(160, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        int selectedRow = StudentCatalog.getSelectedRow();
    if (selectedRow < 0) {
        JOptionPane.showMessageDialog(this, "Please select a row to update!");
        return;
    }

    String firstName = (String) StudentCatalog.getValueAt(selectedRow, 0);
    String lastName = (String) StudentCatalog.getValueAt(selectedRow, 1);
    String emailId = (String) StudentCatalog.getValueAt(selectedRow, 2);
    String contactNo = (String) StudentCatalog.getValueAt(selectedRow, 3);

    try (Connection conn = DatabaseConnection.DBConnection.getConnection()) {
        String query = "UPDATE Students SET first_name = ?, last_name = ?, contact_no = ? WHERE email_id = ?";
        PreparedStatement pstmt = conn.prepareStatement(query);
        pstmt.setString(1, firstName);
        pstmt.setString(2, lastName);
        pstmt.setString(3, contactNo);
        pstmt.setString(4, emailId);

        pstmt.executeUpdate();
        JOptionPane.showMessageDialog(this, "Record updated successfully!");
        loadStudentData();
    } catch (Exception e) {
        e.printStackTrace();
    }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        int selectedRow = StudentCatalog.getSelectedRow();
    if (selectedRow < 0) {
        JOptionPane.showMessageDialog(this, "Please select a row to delete!");
        return;
    }

    String emailId = (String) StudentCatalog.getValueAt(selectedRow, 2);

    try (Connection conn = DatabaseConnection.DBConnection.getConnection()) {
        String query = "DELETE FROM Students WHERE email_id = ?";
        PreparedStatement pstmt = conn.prepareStatement(query);
        pstmt.setString(1, emailId);

        pstmt.executeUpdate();
        JOptionPane.showMessageDialog(this, "Record deleted successfully!");
        loadStudentData();
    } catch (Exception e) {
        e.printStackTrace();
    }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnButtonActionPerformed

    private void loadStudentData() {
    try (Connection conn = DatabaseConnection.DBConnection.getConnection()) {
        // Query to fetch all student records
        String query = "SELECT first_name, last_name, email_id, contact_no FROM Students";
        PreparedStatement pstmt = conn.prepareStatement(query);
        ResultSet rs = pstmt.executeQuery();

        // Get the table model to update rows
        DefaultTableModel model = (DefaultTableModel) StudentCatalog.getModel();
        model.setRowCount(0); // Clear existing rows

        // Loop through the result set and add rows to the table
        while (rs.next()) {
            model.addRow(new Object[]{
                rs.getString("first_name"),
                rs.getString("last_name"),
                rs.getString("email_id"),
                rs.getString("contact_no")
            });
        }
    } catch (SQLException e) {
        e.printStackTrace();
        JOptionPane.showMessageDialog(this, "Failed to load student data!");
    }
}


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane ScrollPane;
    private javax.swing.JTable StudentCatalog;
    private javax.swing.JButton btnButton;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnUpdate;
    // End of variables declaration//GEN-END:variables
}
